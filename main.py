# В ячейке ниже представлен код генерирующий DataFrame,
# которая состоит всего из 1 столбца. Ваша задача перевести
# его в one hot вид. Сможете ли вы это сделать без get_dummies?

"""
Да, можно преобразовать столбец DataFrame в one-hot вид без 
использования функции get_dummies. Вот пример кода, который выполняет это:
"""

import pandas as pd
import random

lst = ['robot'] * 10
lst += ['human'] * 10
random.shuffle(lst)

unique_values = list(set(lst))
one_hot_data = pd.DataFrame(
    {value: [1 if val == value else 0 for val in lst] for value in unique_values})

data = pd.DataFrame(one_hot_data)
print(data.head())

"""
Давайте пройдемся по коду построчно, чтобы понять, что делает каждый шаг:

1. `import pandas as pd` и `import random`: Эти строки импортируют модули 
`pandas` и `random`, которые необходимы для выполнения кода.

2. `lst = ['robot'] * 10`: Эта строка создает список `lst`, в котором 
строковое значение `'robot'` повторяется 10 раз.

3. `lst += ['human'] * 10`: Эта строка расширяет список `lst`, добавляя 
строковое значение `'human'`, повторенное 10 раз.

4. `random.shuffle(lst)`: Эта строка случайным образом перемешивает 
элементы в списке `lst`, изменяя их порядок.

5. `unique_values = list(set(lst))`: Эта строка создает новый список 
`unique_values`, преобразуя уникальные элементы из списка `lst` в 
множество и затем обратно в список. Это дает нам список уникальных значений, присутствующих в `lst`.

6. `one_hot_data = pd.DataFrame({value: [1 if val == value else 0 for val in lst] for value in unique_values})`: 
Эта строка создает словарное включение, которое генерирует словарь `one_hot_data`. 
Ключи словаря - это уникальные значения из `lst`, а значения - списки из 1 и 0. 
Если значение в `lst` соответствует ключу, присваивается 1, в противном случае - 0. Словарное включение затем преобразуется в DataFrame с помощью `pd.DataFrame()`.

7. `data = pd.DataFrame(one_hot_data)`: Эта строка создает DataFrame `data` из словаря `one_hot_data`.

8. `print(data.head())`: Эта строка выводит первые несколько строк DataFrame `data` 
с помощью функции `head()`. Это дает нам представление о данных в формате one-hot encoding.

Код в основном создает список с повторяющимися значениями 'robot' и 'human', 
случайным образом перемешивает список, а затем выполняет one-hot encoding 
на перемешанном списке с использованием pandas. Результаты кода сохраняются 
в DataFrame и выводятся на консоль.
"""
